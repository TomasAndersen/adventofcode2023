/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package adventofcode2023.day1

import adventofcode2023.utils.FileUtil

class Day1 {

    enum class Numbers(val value: Int) {
        ZERO(0),
        ONE(1),
        TWO(2),
        THREE(3),
        FOUR(4),
        FIVE(5),
        SIX(6),
        SEVEN(7),
        EIGHT(8),
        NINE(9)
    }

    fun sumFromNumbers(lines: List<String>): Int {
        var sum = 0
        try {
            lines.forEach { line ->
                val firstNumber = getFirstDigitAsString(line)
                val lastNumber = getLastDigitAsString(line)
                val combinedNumber = (firstNumber + lastNumber).toInt()
                sum += combinedNumber
            }
        } catch (e: Exception) {
            println(e)
        }
        return sum
    }

    fun sumFromNumbersAndWords(lines: List<String>): Int {
        var sum = 0
        try {
            lines.forEach { line ->
                val firstNumber = calculateFirstNumber(line).toString()
                val lastNumber = calculateLastNumber(line).toString()
                val combinedNumber = (firstNumber + lastNumber).toInt()
                sum += combinedNumber
            }
        } catch (e: Exception) {
            println(e)
        }
        return sum
    }

    private fun getFirstDigitAsString(line: String): String {
        return line.first { c -> c.isDigit() }.toString()
    }

    private fun getLastDigitAsString(line: String): String {
        return line.last { c -> c.isDigit() }.toString()
    }

    private fun indexOfFirstDigit(line: String): Int {
        return line.indexOfFirst { c -> c.isDigit() }
    }

    private fun indexOfLastDigit(line: String): Int {
        return line.indexOfLast { c -> c.isDigit() }
    }

    private fun calculateFirstNumber(line: String): Int {
        var lowestIndex = indexOfFirstDigit(line)
        var lowestNum = line[lowestIndex].toString().toInt()
        for (num in Numbers.values()) {
            val index = line.indexOf(num.name.lowercase())
            if (index != -1 && index < lowestIndex) {
                lowestIndex = index
                lowestNum = num.value
            }
        }
        return lowestNum
    }

    private fun calculateLastNumber(line: String): Int {
        var highestIndex = indexOfLastDigit(line)
        var highestNum = line[highestIndex].toString().toInt()
        for (num in Numbers.values()) {
            val index = line.lastIndexOf(num.name.lowercase())
            if (index != -1 && index > highestIndex) {
                highestIndex = index
                highestNum = num.value
            }
        }
        return highestNum
    }
}

fun main() {
    val lines = FileUtil().getLinesNotEmpty("day1input.txt")
    println("Sum by numbers only: " + Day1().sumFromNumbers(lines))
    println("Sum by numbers and words: " + Day1().sumFromNumbersAndWords(lines))
}
